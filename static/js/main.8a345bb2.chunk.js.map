{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","console","log","className","map","movie","onClick","movieTrailer","name","then","url","urlparams","URLSearchParams","URL","search","catch","e","handleclick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginal","fetchTopRated","fetchHorrorMovies","fetchActionMovies","fetchComedyMovies","fetchRomanceMovies","Banner","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","Nav","show","handleshow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a345bb2.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3\",\r\n})\r\n\r\nexport default instance;","import React, { useState, useEffect} from 'react'\r\nimport axios from './axios'\r\nimport './Row.css'\r\nimport YouTube from 'react-youtube'\r\nimport movieTrailer from 'movie-trailer'\r\n\r\nconst base_url =\"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({title, fetchUrl, isLargeRow}) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n    useEffect(()=>{\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            // console.log(request.data.results);\r\n            setMovies(request.data.results)\r\n            return request\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n    \r\n    console.log(movies)\r\n\r\n    const opts = {\r\n        height:\"390\",\r\n        width:\"100%\",\r\n        playerVars: {\r\n\r\n            autoplay:1,\r\n        },\r\n    };\r\n    const handleclick = (movie) =>{\r\n        if(trailerUrl) {\r\n            setTrailerUrl('');\r\n        } else {\r\n            movieTrailer(movie?.name ||  \"\")\r\n            .then((url)=>{\r\n                const urlparams = new URLSearchParams (new URL(url).search);\r\n                setTrailerUrl(urlparams.get('v'))\r\n            }).catch((e)=> console.log(e))\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <div className=\"row__posters\">\r\n                {movies.map(movie =>(\r\n                    <img \r\n                    onClick={() => handleclick(movie)}\r\n                    key={movie.id}\r\n                    className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n                    src= {`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}  alt={movie.name}/>\r\n                ))}\r\n            </div>\r\n            {trailerUrl && <YouTube videoId= {trailerUrl}  opts={opts}/> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","const API_KEY = \"4a571314aff8cff8d36b19d936850431\"\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&lanuage=en-US`,\r\n    fetchNetflixOriginal: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&lanuage=en-US`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`\r\n}\r\n\r\n\r\n\r\n\r\nexport default requests","import React, {useState, useEffect } from 'react'\r\nimport axios from './axios';\r\nimport requests from './requests'\r\nimport './Banner.css'\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.fetchNetflixOriginal);\r\n            setMovie(\r\n            request.data.results[\r\n                Math.floor(Math.random() * request.data.results.length - 1)\r\n            ]\r\n            );\r\n            return request;\r\n        }\r\n        fetchData()\r\n    }, []);\r\n    console.log(movie)\r\n    return (\r\n        <header className=\"banner\"\r\n        style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(\r\n                \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n            )`,\r\n            backgroundPosition: \"center center\"\r\n        }}\r\n        >\r\n            <div className=\"banner__contents\">\r\n                <h1 className=\"banner__title\">{movie?.title ||movie?.name ||movie?.original_name}\r\n                </h1>\r\n                <div className=\"banner_buttons\">\r\n                    <button className=\"banner__button\">Play</button>\r\n                    <button className=\"banner__button\">My List</button>\r\n                </div>\r\n                <h1 className=\"banner__description\">\r\n                    {movie?.overview}\r\n                </h1>\r\n            </div>\r\n            <div className=\"banner--fadeBottom\" />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React, {useState ,useEffect} from 'react'\r\nimport './Nav.css'\r\nfunction Nav() {\r\n    const [show, handleshow] = useState(false);\r\n\r\n    useEffect(() => {\r\n       window.addEventListener(\"scroll\", ()=>{\r\n           if(window.scrollY >100) {\r\n               handleshow(true)\r\n           }else handleshow(false)\r\n       });\r\n       return () =>{\r\n           window.removeEventListener(\"scroll\")\r\n       }\r\n    },[]);\r\n    return (\r\n        <div className={`nav ${show && 'nav__black'}`}>\r\n            <img \r\n                className=\"nav__logo\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/6/69/Netflix_logo.svg\"\r\n                alt=\"Netflix Logo\"\r\n            / >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport requests from './requests'\nimport Banner from './Banner'\nimport Nav from './Nav'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n     <Row \n        title=\"NETFLIX ORIGINAL\" \n        fetchUrl={requests.fetchNetflixOriginal} \n        isLargeRow\n      />\n     <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n     <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n     <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n     <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n     <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n     <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}